{
	"info": {
		"_postman_id": "782e5a59-54e4-4e4b-9f41-d1cd35a02de1",
		"name": "Automation-Petstore-Order",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29356510"
	},
	"item": [
		{
			"name": "Place on order for a pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response size is less than 500 B\", function () {",
							"    pm.expect(pm.response.responseSize).to.be.below(500);",
							"});",
							"",
							"// body",
							"pm.test(\"Body has correct Keys\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"    pm.expect(pm.response.text()).to.include(\"petId\");",
							"    pm.expect(pm.response.text()).to.include(\"quantity\");",
							"    pm.expect(pm.response.text()).to.include(\"shipDate\");",
							"    pm.expect(pm.response.text()).to.include(\"status\");",
							"    pm.expect(pm.response.text()).to.include(\"complete\");",
							"});",
							"",
							"pm.test(\"Body has correct Values\", function () {",
							"    pm.expect(pm.response.text()).to.include(9);",
							"    pm.expect(pm.response.text()).to.include(76);",
							"    pm.expect(pm.response.text()).to.include(876);",
							"    pm.expect(pm.response.text()).to.include(\"2023-08-26T03:20:59\");",
							"    pm.expect(pm.response.text()).to.include(\"placed\");",
							"    pm.expect(pm.response.text()).to.include(true);",
							"});",
							"",
							"pm.test(\"ID Keys-Values are correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(9);",
							"    pm.expect(jsonData.petId).to.eql(76);",
							"    pm.expect(jsonData.quantity).to.eql(876);",
							"    pm.expect(jsonData.status).to.eql(\"placed\");",
							"    pm.expect(jsonData.complete).to.eql(true);",
							"});",
							"",
							"// Test Header",
							"",
							"pm.test(\"Header is ok\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");",
							"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": 9,\n    \"petId\": 76,\n    \"quantity\": 876,\n    \"shipDate\": \"2023-08-26T03:20:59.264Z\",\n    \"status\": \"placed\",\n    \"complete\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find purchase order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response size is less than 500 B\", function () {",
							"    pm.expect(pm.response.responseSize).to.be.below(500);",
							"});",
							"",
							"// body",
							"pm.test(\"Body has correct Keys\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"    pm.expect(pm.response.text()).to.include(\"petId\");",
							"    pm.expect(pm.response.text()).to.include(\"quantity\");",
							"    pm.expect(pm.response.text()).to.include(\"shipDate\");",
							"    pm.expect(pm.response.text()).to.include(\"status\");",
							"    pm.expect(pm.response.text()).to.include(\"complete\");",
							"});",
							"",
							"pm.test(\"Body has correct Values\", function () {",
							"    pm.expect(pm.response.text()).to.include(9);",
							"    pm.expect(pm.response.text()).to.include(76);",
							"    pm.expect(pm.response.text()).to.include(876);",
							"    pm.expect(pm.response.text()).to.include(\"2023-08-26T03:20:59\");",
							"    pm.expect(pm.response.text()).to.include(\"placed\");",
							"    pm.expect(pm.response.text()).to.include(true);",
							"});",
							"",
							"pm.test(\"ID Keys-Values are correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(9);",
							"    pm.expect(jsonData.petId).to.eql(76);",
							"    pm.expect(jsonData.quantity).to.eql(876);",
							"    pm.expect(jsonData.status).to.eql(\"placed\");",
							"    pm.expect(jsonData.complete).to.eql(true);",
							"});",
							"",
							"// Test Header",
							"",
							"pm.test(\"Header is ok\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");",
							"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order/9",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete purchase order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response size is less than 500 B\", function () {",
							"    pm.expect(pm.response.responseSize).to.be.below(500);",
							"});",
							"",
							"// body",
							"pm.test(\"Body has correct Keys\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"code\");",
							"    pm.expect(pm.response.text()).to.include(\"type\");",
							"    pm.expect(pm.response.text()).to.include(\"message\");",
							"});",
							"",
							"pm.test(\"Body has correct Values\", function () {",
							"    pm.expect(pm.response.text()).to.include(200);",
							"    pm.expect(pm.response.text()).to.include(\"unknown\");",
							"    pm.expect(pm.response.text()).to.include(\"9\");",
							"});",
							"",
							"pm.test(\"ID Keys-Values are correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");",
							"    pm.expect(jsonData.message).to.eql(\"9\");",
							"",
							"});",
							"",
							"// Test Header",
							"pm.test(\"Header is ok\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");",
							"    pm.response.to.have.header(\"Server\", \"Jetty(9.2.9.v20150224)\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order/9",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order",
						"9"
					]
				}
			},
			"response": []
		}
	]
}