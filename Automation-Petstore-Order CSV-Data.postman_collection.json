{
	"info": {
		"_postman_id": "02ba1a19-1cb4-4014-8240-bbdb77e199d0",
		"name": "Automation-Petstore-Order CSV-Data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29356510"
	},
	"item": [
		{
			"name": "Place on order for a pet",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Current ID is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(pm.iterationData.get(\"ID\"));",
							"});",
							"",
							"pm.test(\"Current Pet-ID is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.petId).to.eql(pm.iterationData.get(\"PETID\"));",
							"});",
							"",
							"pm.test(\"Current Quantity is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.quantity).to.eql(pm.iterationData.get(\"QT\"));",
							"});",
							"",
							"pm.test(\"Current Status is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"STS\"));",
							"});",
							"",
							"pm.test(\"Current Comlete Key is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.complete).to.eql(Boolean(pm.iterationData.get(\"COM\")));",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": {{ID}},\n    \"petId\": {{PETID}},\n    \"quantity\": {{QT}},\n    \"shipDate\": \"2022-06-21T01:14:09.524Z\",\n    \"status\": \"{{STS}}\",\n    \"complete\": {{COM}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find purchase order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Current ID is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(pm.iterationData.get(\"ID\"));",
							"});",
							"",
							"pm.test(\"Current Pet-ID is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.petId).to.eql(pm.iterationData.get(\"PETID\"));",
							"});",
							"",
							"pm.test(\"Current Quantity is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.quantity).to.eql(pm.iterationData.get(\"QT\"));",
							"});",
							"",
							"pm.test(\"Current Status is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.status).to.eql(pm.iterationData.get(\"STS\"));",
							"});",
							"",
							"pm.test(\"Current Comlete Key is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.complete).to.eql(Boolean(pm.iterationData.get(\"COM\")));",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order/{{ID}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order",
						"{{ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete purchase order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Current ID is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"\" + pm.iterationData.get(\"ID\"));  // number => string ",
							"    // string => number (\"vjgfjhg\" * 1)",
							"});",
							"",
							"pm.test(\"Type key/value is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");  ",
							"});",
							"",
							"pm.test(\"Code key/value is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);  ",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/store/order/{{ID}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"store",
						"order",
						"{{ID}}"
					]
				}
			},
			"response": []
		}
	]
}